{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addNewMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","onSubmit","event","preventDefault","trim","length","newMovie","classNames","form__error","type","placeholder","value","onChange","target","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef23473a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addNewMovie: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ addNewMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const checkErrors = () => {\n    setTitleError(!title || title.trim().length === 0);\n    setImgUrlError(!imgUrl || imgUrl.trim().length === 0);\n    setImdbUrlError(!imdbUrl || imdbUrl.trim().length === 0);\n    setImdbIdError(!imdbId || imdbId.trim().length === 0);\n  };\n\n  const onAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    checkErrors();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (title.trim().length > 0\n      && imgUrl.trim().length > 0\n      && imdbUrl.trim().length > 0\n      && imdbId.trim().length > 0\n    ) {\n      addNewMovie(newMovie);\n      clearForm();\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={onAdd}\n    >\n      <input\n        className={classNames('form__input', { form__error: titleError })}\n        type=\"text\"\n        placeholder=\"tittle\"\n        value={title}\n        onChange={event => {\n          setTitle(event.target.value);\n          setTitleError(false);\n        }}\n      />\n      <input\n        className=\"form__input\"\n        type=\"text\"\n        placeholder=\"description\"\n        value={description}\n        onChange={event => setDescription(event.target.value)}\n      />\n      <input\n        className={classNames('form__input', { form__error: imgUrlError })}\n        type=\"text\"\n        placeholder=\"imgUrl\"\n        value={imgUrl}\n        onChange={event => {\n          setImgUrl(event.target.value);\n          setImdbIdError(false);\n          setImgUrlError(false);\n        }}\n      />\n      <input\n        className={classNames('form__input', { form__error: imdbUrlError })}\n        type=\"text\"\n        placeholder=\"imdbUrl\"\n        value={imdbUrl}\n        onChange={event => {\n          setImdbUrl(event.target.value);\n          setImdbUrlError(false);\n        }}\n      />\n      <input\n        className={classNames('form__input', { form__error: imdbIdError })}\n        type=\"text\"\n        placeholder=\"imdbId\"\n        value={imdbId}\n        onChange={event => {\n          setImdbId(event.target.value);\n          setImdbIdError(false);\n        }}\n      />\n      <button\n        type=\"submit\"\n        className=\"form__add\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <h1 className=\"sidebar__title\">Add movie</h1>\n        <NewMovie\n          addNewMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}